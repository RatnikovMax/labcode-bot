# cleanup_logs.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥-—Ñ–∞–π–ª–æ–≤
–ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —á–µ—Ä–µ–∑ cron –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
"""

import os
import glob
import time
from datetime import datetime


def cleanup_logs(log_dir="logs", keep_days=30):
    """–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ä—à–µ keep_days –¥–Ω–µ–π"""

    if not os.path.exists(log_dir):
        print(f"üìÅ –ü–∞–ø–∫–∞ {log_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return

    current_time = time.time()
    deleted_count = 0

    # –ò—â–µ–º –≤—Å–µ –ª–æ–≥-—Ñ–∞–π–ª—ã
    for log_file in glob.glob(os.path.join(log_dir, "*.log*")):
        file_time = os.path.getctime(log_file)

        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—Ç–∞—Ä—à–µ keep_days –¥–Ω–µ–π
        if file_time < current_time - (keep_days * 86400):
            try:
                os.remove(log_file)
                deleted_count += 1
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {log_file}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {log_file}: {e}")

    print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {deleted_count}")


if __name__ == "__main__":
    print(f"üïê –ù–∞—á–∞–ª–æ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤: {datetime.now()}")
    cleanup_logs()