# utils/notifications.py
import logging
from aiogram import Bot
from config import ADMIN_ID, VK_ADMIN_ID, VK_GROUP_TOKEN
import vk_api
from datetime import datetime

notification_logger = logging.getLogger('app')


async def notify_admin(bot: Bot, user_data: dict, contact_info: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ Telegram"""
    if not ADMIN_ID:
        notification_logger.warning("ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    try:
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if user_data.get('category') == 'student_help':
            message_text = f"""
üìã **–ù–û–í–´–ô –ó–ê–ü–†–û–° –û–¢ –°–¢–£–î–ï–ù–¢–ê**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @{user_data.get('username', 'N/A')} (ID: {user_data.get('user_id', 'N/A')})
üìù **–¢–∏–ø —Ä–∞–±–æ—Ç—ã:** {user_data.get('work_type', 'N/A')}
üìû **–ö–æ–Ω—Ç–∞–∫—Ç:** {contact_info}
üïê **–í—Ä–µ–º—è:** {timestamp}

‚ö° **–¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!**
            """
        else:
            message_text = f"""
üìã **–ù–û–í–´–ô –ó–ê–ü–†–û–° –ù–ê –û–ë–£–ß–ï–ù–ò–ï**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @{user_data.get('username', 'N/A')} (ID: {user_data.get('user_id', 'N/A')})
üíª **–Ø–∑—ã–∫:** {user_data.get('language', 'N/A')}
üìö **–§–æ—Ä–º–∞—Ç:** {user_data.get('format', 'N/A')}
üìû **–ö–æ–Ω—Ç–∞–∫—Ç:** {contact_info}
üïê **–í—Ä–µ–º—è:** {timestamp}

‚ö° **–¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!**
            """

        await bot.send_message(
            chat_id=ADMIN_ID,
            text=message_text,
            parse_mode='Markdown'
        )
        notification_logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {ADMIN_ID} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data.get('user_id')}")

    except Exception as e:
        notification_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")


def notify_admin_vk(user_data: dict, contact_info: str, user_id: int):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ VK"""
    if not VK_ADMIN_ID or not VK_GROUP_TOKEN:
        notification_logger.warning("VK_ADMIN_ID –∏–ª–∏ VK_GROUP_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é VK –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        vk_session = vk_api.VkApi(token=VK_GROUP_TOKEN)
        vk = vk_session.get_api()

        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if user_data.get('category') == 'student_help':
            message_text = f"""
üìã –ù–û–í–´–ô –ó–ê–ü–†–û–° –û–¢ –°–¢–£–î–ï–ù–¢–ê (VK)

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: VK ID: {user_id}
üìù –¢–∏–ø —Ä–∞–±–æ—Ç—ã: {user_data.get('work_type', 'N/A')}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {contact_info}
üïê –í—Ä–µ–º—è: {timestamp}

‚ö° –¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!
            """
        else:
            message_text = f"""
üìã –ù–û–í–´–ô –ó–ê–ü–†–û–° –ù–ê –û–ë–£–ß–ï–ù–ò–ï (VK)

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: VK ID: {user_id}
üíª –Ø–∑—ã–∫: {user_data.get('language', 'N/A')}
üìö –§–æ—Ä–º–∞—Ç: {user_data.get('format', 'N/A')}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {contact_info}
üïê –í—Ä–µ–º—è: {timestamp}

‚ö° –¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!
            """

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É VK
        vk.messages.send(
            user_id=int(VK_ADMIN_ID),
            message=message_text,
            random_id=vk_api.utils.get_random_id()
        )

        notification_logger.info(f"VK —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {VK_ADMIN_ID} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    except vk_api.exceptions.ApiError as e:
        notification_logger.error(f"VK API –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")
    except Exception as e:
        notification_logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ VK —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")


# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é VK —Å–µ—Å—Å–∏—é
def notify_admin_vk_with_session(vk_api_object, user_data: dict, contact_info: str, user_id: int):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ VK —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ VK API –æ–±—ä–µ–∫—Ç–∞"""
    if not VK_ADMIN_ID:
        notification_logger.warning("VK_ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    try:
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if user_data.get('category') == 'student_help':
            message_text = f"""
üìã –ù–û–í–´–ô –ó–ê–ü–†–û–° –û–¢ –°–¢–£–î–ï–ù–¢–ê (VK)

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: VK ID: {user_id}
üìù –¢–∏–ø —Ä–∞–±–æ—Ç—ã: {user_data.get('work_type', 'N/A')}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {contact_info}
üïê –í—Ä–µ–º—è: {timestamp}

‚ö° –¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!
            """
        else:
            message_text = f"""
üìã –ù–û–í–´–ô –ó–ê–ü–†–û–° –ù–ê –û–ë–£–ß–ï–ù–ò–ï (VK)

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: VK ID: {user_id}
üíª –Ø–∑—ã–∫: {user_data.get('language', 'N/A')}
üìö –§–æ—Ä–º–∞—Ç: {user_data.get('format', 'N/A')}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {contact_info}
üïê –í—Ä–µ–º—è: {timestamp}

‚ö° –¢—Ä–µ–±—É–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!
            """

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π VK API –æ–±—ä–µ–∫—Ç
        vk_api_object.messages.send(
            user_id=int(VK_ADMIN_ID),
            message=message_text,
            random_id=vk_api.utils.get_random_id()
        )

        notification_logger.info(f"VK —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {VK_ADMIN_ID} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    except Exception as e:
        notification_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ VK —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")