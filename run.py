# run.py
import asyncio
import logging
import threading
from bot import main as telegram_main
from vk_bot import VKBot
from utils.logger import setup_logger
from config import VK_GROUP_TOKEN, VK_GROUP_ID


async def run_telegram_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    try:
        await telegram_main()
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ Telegram –±–æ—Ç–µ: {e}")


def run_vk_bot():
    """–ó–∞–ø—É—Å–∫ VK –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        logging.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK –±–æ—Ç–∞...")
        vk_bot = VKBot()
        logging.info("‚úÖ VK –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º...")
        vk_bot.run()
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ VK –±–æ—Ç–µ: {e}", exc_info=True)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    setup_logger()
    logger = logging.getLogger(__name__)

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º—É–ª—å—Ç–∏-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ Lab&Code...")

    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    logger.info(f"VK_GROUP_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if VK_GROUP_TOKEN else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    logger.info(f"VK_GROUP_ID: {VK_GROUP_ID}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º VK –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    if VK_GROUP_TOKEN and VK_GROUP_ID:
        logger.info("‚úÖ –ó–∞–ø—É—Å–∫ VK –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")
        vk_thread = threading.Thread(target=run_vk_bot, daemon=True)
        vk_thread.start()
        logger.info(f"‚úÖ VK –ø–æ—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω. ID: {vk_thread.ident}, Alive: {vk_thread.is_alive()}")
    else:
        logger.info("‚ùå VK –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    logger.info("‚úÖ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    await run_telegram_bot()


if __name__ == "__main__":
    asyncio.run(main())